class g{constructor(t){this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.balls=[],this.connections=[],this.animationId=null,this.phase=1,this.timer=0,this.phaseDelay=60,this.timeMultiplier=6,this.timeMode="fast",this.lightenedNodes=[],this.lightTimer=0,this.mouseX=0,this.mouseY=0,this.permanentNodes=new Set,this.tsunamiWaves=[],this.animationStartTime=Date.now(),this.springForce=.02,this.repulsiveForce=6e4,this.damping=.9,this.idealDistance=120,this.resizeCanvas(),this.init(),this.animate(),window.addEventListener("resize",()=>this.resizeCanvas()),this.canvas.addEventListener("click",n=>this.handleCanvasClick(n)),this.canvas.addEventListener("mousemove",n=>this.handleMouseMove(n))}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.canvasOffsetX=0,this.canvasOffsetY=0}init(){this.balls=[],this.connections=[],this.phase=1,this.timer=0;for(let t=0;t<8;t++){const n=Math.PI*2*t/8,e=80,a=window.innerWidth/2,s=window.innerHeight/2,i=a+Math.cos(n)*e,o=s+Math.sin(n)*e;this.addBall(i,o)}this.createInitialConnections(),this.designatePermanentNodes()}createInitialConnections(){for(let t=0;t<7;t++)this.connections.push({from:t,to:t+1,pulse:Math.random()*Math.PI*2,strength:.8,type:"regular",createdAt:Date.now(),isProtected:!1})}addBall(t,n){let e=0;const a=this.balls.map(i=>i.id).sort((i,o)=>i-o);for(let i=0;i<a.length&&a[i]===e;i++)e++;const s={x:t,y:n,vx:0,vy:0,radius:7.5,baseRadius:7.5,color:"hsl(220, 70%, 55%)",pulse:Math.random()*Math.PI*2,active:!0,id:e,connectionStartTime:null,hasConnections:!1,createdTime:Date.now()};return this.balls.push(s),s}addBallsInPhase(){const t=this.balls.length,n=this.phase;this.removeOldBalls();for(let e=0;e<n;e++){let a,s,i=0,o=!1;for(;!o&&i<50;){const r=Math.PI*2*e/n+Math.random()*.5,d=150+Math.random()*100,h=Math.floor(Math.random()*t),l=this.balls[h];a=l.x+Math.cos(r)*d,s=l.y+Math.sin(r)*d,o=!0;for(const f of this.balls)if(Math.sqrt((a-f.x)**2+(s-f.y)**2)<60){o=!1;break}i++}o||(a=-200+Math.random()*(window.innerWidth+400),s=-200+Math.random()*(window.innerHeight+400));const c=this.addBall(a,s);this.connectToNearestBall(c)}}removeOldBalls(){this.removeIsolatedBalls();const t=this.balls.length,n=Math.floor(t*.05);if(n>0&&t>5){const e=[],a=Date.now(),s=this.balls.map(i=>{const o=this.connections.filter(d=>d.from===i.id||d.to===i.id).length,c=i.connectionStartTime?a-i.connectionStartTime:0,r=c>=4e3;return{ball:i,connectionCount:o,connectionDuration:c,isProtected:r,removalProbability:r?0:Math.max(.005,.4-o*.125)}});for(const i of s){if(e.length>=Math.min(n,t-5))break;Math.random()<i.removalProbability&&!this.permanentNodes.has(i.ball.id)&&e.push(i.ball.id)}this.connections=this.connections.filter(i=>!e.includes(i.from)&&!e.includes(i.to)),this.balls=this.balls.filter(i=>!e.includes(i.id))}}removeIsolatedBalls(){const t=this.balls.filter(n=>!this.connections.some(a=>a.from===n.id||a.to===n.id));if(t.length>0){const n=t.map(e=>e.id);this.balls=this.balls.filter(e=>!n.includes(e.id))}}isAlreadyConnected(t,n){return this.connections.some(e=>e.from===t&&e.to===n||e.from===n&&e.to===t)}connectToNearestBall(t){const e=this.balls.filter(s=>s!==t).filter(s=>Math.sqrt((t.x-s.x)**2+(t.y-s.y)**2)<=180).map(s=>{const i=Math.sqrt((t.x-s.x)**2+(t.y-s.y)**2);return{ball:s,distance:i}}).sort((s,i)=>s.distance-i.distance);if(e.length===0)return;const a=Math.min(2+Math.floor(Math.random()*2),e.length);for(let s=0;s<a;s++){let i;Math.random()<.8?i=e[s%e.length].ball:i=e[Math.floor(Math.random()*e.length)].ball;const o=Math.sqrt((i.x-t.x)**2+(i.y-t.y)**2);!this.isAlreadyConnected(i.id,t.id)&&o<=180&&this.connections.push({from:i.id,to:t.id,pulse:Math.random()*Math.PI*2,strength:.8,type:"watts_strogatz",createdAt:Date.now(),isProtected:!1})}}pruneDistantConnections(){this.connections=this.connections.filter(n=>{const e=this.balls.find(s=>s.id===n.from),a=this.balls.find(s=>s.id===n.to);if(e&&a){const s=Math.sqrt((e.x-a.x)**2+(e.y-a.y)**2);return n.isProtected?!0:s<=300}return!1})}updateSpringLayout(){this.balls.forEach(t=>{let n=0,e=0;if(this.connections.forEach(c=>{let r=null,d=!1;if(c.from===t.id?(r=this.balls.find(h=>h.id===c.to),d=!0):c.to===t.id&&(r=this.balls.find(h=>h.id===c.from),d=!0),r&&d){const h=r.x-t.x,l=r.y-t.y,f=Math.sqrt(h*h+l*l);if(f>0){const m=this.springForce*(f-this.idealDistance);n+=h/f*m,e+=l/f*m}}}),this.balls.forEach(c=>{if(c.id!==t.id){const r=c.x-t.x,d=c.y-t.y,h=Math.sqrt(r*r+d*d);if(h>0&&h<200){const l=this.repulsiveForce/(h*h);n-=r/h*l,e-=d/h*l}}}),this.centerNode&&(Date.now()-this.animationStartTime)/1e3>=10){const r=this.centerNode.x-t.x,d=this.centerNode.y-t.y,h=Math.sqrt(r*r+d*d);h>0&&(n+=r/h*.001*h,e+=d/h*.001*h)}t.vx+=n*.01,t.vy+=e*.01,t.vx*=this.damping,t.vy*=this.damping,t.x+=t.vx,t.y+=t.vy;const a=-100,s=-100,i=100,o=100;t.x=Math.max(a,Math.min(window.innerWidth+i,t.x)),t.y=Math.max(s,Math.min(window.innerHeight+o,t.y))})}startInformationPulse(){if(this.balls.length===0)return;const t=this.balls[Math.floor(Math.random()*this.balls.length)],n={id:Date.now()+Math.random(),sourceId:t.id,currentNodes:new Set([t.id]),visitedNodes:new Set([t.id]),nodeDistances:new Map([[t.id,0]]),intensity:1,lifeTime:300,propagationDelay:15,currentDistance:0,maxDistance:5,isReturning:!1};this.informationPulses.push(n)}updateInformationPulses(){this.informationPulses=this.informationPulses.filter(t=>{if(t.lifeTime--,t.propagationDelay--,t.propagationDelay<=0)if(t.propagationDelay=15,t.isReturning){const n=t.currentDistance-1,e=new Set;for(const[a,s]of t.nodeDistances.entries())if(s===n){const i=Math.min(.9,n*.25);(s===0||Math.random()>i)&&e.add(a)}t.currentNodes=e,t.currentDistance=n,(t.currentDistance<0||e.size===0)&&(t.lifeTime=0)}else{const n=new Set,e=t.currentDistance+1;for(const a of t.currentNodes)this.connections.forEach(s=>{let i=null;s.from===a&&!t.visitedNodes.has(s.to)?i=s.to:s.to===a&&!t.visitedNodes.has(s.from)&&(i=s.from),i!==null&&(n.add(i),t.visitedNodes.add(i),t.nodeDistances.set(i,e))});t.currentNodes=n,t.currentDistance=e,(t.currentDistance>=t.maxDistance||n.size===0)&&(t.isReturning=!0,t.currentDistance=t.maxDistance,t.propagationDelay=30)}return t.isReturning?t.intensity=Math.max(0,t.intensity-.02):t.intensity=Math.max(.3,t.intensity-.005),t.lifeTime>0&&t.intensity>0})}handleMouseMove(t){const n=this.canvas.getBoundingClientRect();this.mouseX=t.clientX-n.left,this.mouseY=t.clientY-n.top;const e=this.balls.find(s=>Math.sqrt((this.mouseX-s.x)**2+(this.mouseY-s.y)**2)<=s.radius+5);e&&!this.permanentNodes.has(e.id)&&(this.startTsunamiWave(e.x,e.y),this.removeNodesById([e.id]));const a=[];if(this.connections=this.connections.filter(s=>{if(s.isProtected)return!0;const i=this.balls.find(r=>r.id===s.from),o=this.balls.find(r=>r.id===s.to);return!i||!o?!1:this.distanceToLineSegment(this.mouseX,this.mouseY,i.x,i.y,o.x,o.y)<=10?(a.push({fromX:i.x,fromY:i.y,toX:o.x,toY:o.y,centerX:(i.x+o.x)/2,centerY:(i.y+o.y)/2}),!1):!0}),a.length>0){const s=a[0];this.startTsunamiWave(s.centerX,s.centerY)}}startTsunamiWave(t,n){this.tsunamiWaves.push({centerX:t,centerY:n,time:0,timer:660,id:Date.now()+Math.random()})}calculateWaveEffect(t,n){if(this.tsunamiWaves.length===0)return{offsetY:0,scale:1};let e=0,a=1;return this.tsunamiWaves.forEach(s=>{const i=Math.sqrt((t-s.centerX)**2+(n-s.centerY)**2),o=200;if(i<=o){const c=i/o,r=4*(1-c),d=s.time-i*.004,h=Math.sin(d)*r;e+=h;const l=1+(Math.sin(d)*.04+.04)*(1-c);a+=l-1}}),{offsetY:e,scale:Math.max(.6,a)}}distanceToLineSegment(t,n,e,a,s,i){const o=s-e,c=i-a,r=Math.sqrt(o*o+c*c);if(r===0)return Math.sqrt((t-e)**2+(n-a)**2);const d=Math.max(0,Math.min(1,((t-e)*o+(n-a)*c)/(r*r))),h=e+d*o,l=a+d*c;return Math.sqrt((t-h)**2+(n-l)**2)}handleCanvasClick(t){const n=this.canvas.getBoundingClientRect(),e=t.clientX-n.left,a=t.clientY-n.top,s=this.balls.find(i=>Math.sqrt((e-i.x)**2+(a-i.y)**2)<=i.radius+10);if(s){const i=this.findNodesWithinHops(s.id,3);this.lightenedNodes=i,this.lightTimer=180,this.startTsunamiWave(s.x,s.y),setTimeout(()=>{const o=i.filter(c=>this.permanentNodes.has(c)?!1:Math.random()<.85);this.removeNodesById(o),this.lightenedNodes=[]},3e3)}}findNodesWithinHops(t,n){const e=new Set,a=[{nodeId:t,hops:0}],s=[];for(;a.length>0;){const{nodeId:i,hops:o}=a.shift();if(!(e.has(i)||o>n)&&(e.add(i),s.push(i),o<n)){const c=this.connections.filter(r=>r.from===i||r.to===i).map(r=>r.from===i?r.to:r.from);for(const r of c)e.has(r)||a.push({nodeId:r,hops:o+1})}}return s}removeNodesById(t){this.balls=this.balls.filter(n=>!t.includes(n.id)),this.connections=this.connections.filter(n=>n.isProtected?!0:!t.includes(n.from)&&!t.includes(n.to))}designatePermanentNodes(){const t=[0,2,4,6];for(const n of t)n<this.balls.length&&this.permanentNodes.add(this.balls[n].id)}update(){const t=this.timeMultiplier;this.timer+=t;const n=Date.now();if(this.waveTime+=.15,this.updateSpringLayout(),this.timer%30===0&&this.pruneDistantConnections(),this.balls.forEach(e=>{this.connections.some(i=>i.from===e.id||i.to===e.id)?e.hasConnections||(e.connectionStartTime=n,e.hasConnections=!0):(e.connectionStartTime=null,e.hasConnections=!1),e.pulse+=.02*this.timeMultiplier;const s=Math.sin(e.pulse);e.radius=e.baseRadius+s*1}),this.connections.forEach(e=>{e.pulse+=.03*this.timeMultiplier}),this.lightTimer>0&&(this.lightTimer-=this.timeMultiplier),this.tsunamiWaves=this.tsunamiWaves.filter(e=>(e.time+=.015*this.timeMultiplier,e.timer-=this.timeMultiplier,e.timer>0)),this.timer%60===0){const e=Date.now(),a=[];this.balls.forEach(s=>{if(this.permanentNodes.has(s.id))return;const o=(e-s.createdTime)/1e3;let c=0;if(o>=10&&o<15)c=.08;else if(o>=20&&o<25)c=.15;else if(o>=30&&o<35)c=.15;else if(o>=40&&o<45)c=.15;else if(o>=50){const f=Math.floor((o-50)/10)*10+50,m=o-f;m>=0&&m<5?c=.15:c=0}let r=1;o>20&&(r=Math.max(.2,1-(o-20)*.03));const d=this.connections.filter(f=>f.from===s.id||f.to===s.id).length,h=Math.max(.1,1-d*.15),l=c*r*h;l>0&&Math.random()<l&&a.push(s.id)}),a.length>0&&this.removeNodesById(a)}this.timer>=this.phaseDelay&&(this.timer=0,this.phase=Math.min(this.phase*2,8),this.timeMultiplier=6,this.phase<=8&&this.addBallsInPhase())}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.connections.forEach(t=>{const n=this.balls.find(a=>a.id===t.from),e=this.balls.find(a=>a.id===t.to);if(n&&e){const a=this.calculateWaveEffect(n.x,n.y),s=this.calculateWaveEffect(e.x,e.y),i=this.calculateWaveEffect((n.x+e.x)/2,(n.y+e.y)/2),o=n.x,c=n.y+a.offsetY,r=e.x,d=e.y+s.offsetY,h=Math.sin(t.pulse)*.15+.7,l=t.isProtected?`rgba(255, 215, 0, ${h*.8})`:`rgba(100, 130, 180, ${h*.8})`,f=t.isProtected?`rgba(255, 235, 100, ${h*.2*i.scale})`:`rgba(120, 150, 200, ${h*.3*i.scale})`,u=(t.isProtected?6:4)*i.scale;this.ctx.strokeStyle=f,this.ctx.lineWidth=u+4,this.ctx.beginPath(),this.ctx.moveTo(o,c),this.ctx.lineTo(r,d),this.ctx.stroke(),this.ctx.strokeStyle=l,this.ctx.lineWidth=u,this.ctx.beginPath(),this.ctx.moveTo(o,c),this.ctx.lineTo(r,d),this.ctx.stroke()}}),this.balls.forEach(t=>{const n=this.lightenedNodes.includes(t.id),e=this.permanentNodes.has(t.id),a=this.calculateWaveEffect(t.x,t.y),s=t.x,i=t.y+a.offsetY,o=t.radius*a.scale;if(n){const c=Math.sin(Date.now()*.01)*.5+.8,r=this.ctx.createRadialGradient(s,i,0,s,i,o*3);r.addColorStop(0,`rgba(255, 255, 255, ${c})`),r.addColorStop(.7,`rgba(255, 255, 200, ${c*.5})`),r.addColorStop(1,"transparent"),this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(s,i,o*3,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=`rgba(255, 255, 255, ${c})`}else e?this.ctx.fillStyle="hsl(220, 80%, 50%)":this.ctx.fillStyle=t.color;this.ctx.beginPath(),this.ctx.arc(s,i,o,0,Math.PI*2),this.ctx.fill(),e&&!n&&(this.ctx.fillStyle="white",this.ctx.beginPath(),this.ctx.arc(s,i,o*.3,0,Math.PI*2),this.ctx.fill())}),this.ctx.fillStyle="rgba(255, 255, 255, 0.8)",this.ctx.font="24px Arial",this.ctx.fillText(`Balls: ${this.balls.length} | Next: ${this.phase<=8?this.phase:"Complete"}`,20,40)}animate(){try{this.update(),this.draw(),this.animationId=requestAnimationFrame(()=>this.animate())}catch(t){console.error("Animation error:",t),this.animationId=requestAnimationFrame(()=>this.animate())}}destroy(){this.animationId&&cancelAnimationFrame(this.animationId),window.removeEventListener("resize",this.resizeCanvas)}}document.addEventListener("DOMContentLoaded",()=>{new g("networkCanvas")});
